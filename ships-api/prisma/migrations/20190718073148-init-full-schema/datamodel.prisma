// export SHIPS_LOCAL_POSTGRES_URL=postgresql://admin:XXX@localhost:5432/ships
// export SHIPS_PROD_POSTGRES_URL=postgresql://tadas:XXX@YYY:5432/ships

datasource db {
  enabled  = true
  provider = "postgresql"
  url      = env("SHIPS_LOCAL_POSTGRES_URL")
}

// datasource db {
//   enabled   = false
//   provider  = "postgresql"
//   url       = env("SHIPS_PROD_POSTGRES_URL")
// }

generator photon {
  provider = "photonjs"
}

model Circle {
  id          String    @id @default(cuid())
  name        String
  description String?
  contacts    Contact[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id           String        @id @default(cuid())
  circles      Circle[]
  person       Person?
  organization Organization?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Person {
  id         String  @id @default(cuid())
  firstName  String?
  middleName String?
  lastName   String?

  mediumUser      MediumUser?
  facebookUser    FacebookUser?
  linkedinUser    LinkedinUser?
  instagramUser   InstagramUser?
  githubUser      GithubUser?
  goodreadsUser   GoodreadsUser?
  twitterUser     TwitterUser?
  personalWebsite Website?
  profilePicture  Image?
  work            WorkerOccupation[]
  reside          PersonLocation[]
  degrees         Degree[]
  phones          Phone[]
  emailAddresses  EmailAddress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MediumUser {
  id    String @id @default(cuid())
  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FacebookUser {
  // TODO do I *need* the default??
  id String @id @default(cuid())

  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LinkedinUser {
  id    String @id @default(cuid())
  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InstagramUser {
  id       String @id @default(cuid())
  username String

  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GithubUser {
  id       String @id @default(cuid())
  username String

  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GoodreadsUser {
  id    String @id @default(cuid())
  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TwitterUser {
  id    String @id @default(cuid())
  owner Person

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Phone {
  // TODO could just use number as PK
  id          String  @id @default(cuid())
  number      String  @unique
  description String?

  ownerPerson       Person?
  ownerOrganization Organization?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkerOccupation {
  id String @id @default(cuid())

  from DateTime
  to   DateTime

  worker Person
  as     Occupation

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Occupation {
  id String @id @default(cuid())

  role String

  at Organization?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Organization {
  id String @id @default(cuid())

  name String

  emailAddresses EmailAddress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmailAddress {
  // TODO could just use value as PK
  id String @id @default(cuid())

  value       String  @unique
  description String?

  ownerOrganization Organization?
  ownerPerson       Person?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Website {
  id          String  @id @default(cuid())
  url         String  @unique
  description String?

  ownerPerson       Person?
  ownerOrganization Organization?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id  String @id @default(cuid())
  url String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PersonLocation {
  id String @id @default(cuid())

  from DateTime?
  to   DateTime?

  resident Person
  at       Location

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id String @id @default(cuid())

  address Address

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id String @id @default(cuid())

  line1   String?
  line2   String?
  city    String?
  state   String?
  zip     String?
  country String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Degree {
  id String @id @default(cuid())

  year Int
  type String

  student Person
  school  School

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model School {
  id String @id @default(cuid())

  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}